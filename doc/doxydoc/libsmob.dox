namespace opencog {
/**

\page libsmob Scheme bindings library

The library (<em>opencog/guile</em>) implements Scheme extensions using guile.
To build it, use:
@code
make smob
@endcode

Dependencies:
- guile library

The <a href="http://opencog.org/wiki/Scheme">wiki page</a> describes both
how to run it and the core functions that are provided.
Main class for evaluation is SchemeEval. It is implemented as a singletons,
so to get the instance use:
@code
SchemeEval &eval = SchemeEval::instance(&as);
@endcode

Wrapping a C++ object is done using SchemePrimitive and actual implementation
is done by SchemeSmob.

\if MARKER_TREE_START
ignored by doxygen; used as markers for update-links.py;
\endif

<TABLE width="100%" border="0"><TR>
<TD>\ref libspacetime "Previous"</TD>
<TD width="100%"></TD>
<TD>\ref libcomboreduct "Next"</TD>
</TR></TABLE>
\if MARKER_TREE_END
ignored by doxygen; used as markers for update-links.py;
\endif
*/


/**
\defgroup grp_smob Scheme bindings library

This library (<em>opencog/smob</em>) implements Scheme extensions using guile.
To build it type:
@code
make smob
@endcode

To read a high level overview of this library head to 
\ref libsmob "dedicated page".
*/
} //~namespace opencog
