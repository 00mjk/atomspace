#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "helvet" "default"
\font_typewriter "courier" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures false
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry false
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Learning, Searching, Querying, Parsing
\end_layout

\begin_layout Author
Linas Vepstas
\end_layout

\begin_layout Date
31 August 2020
\end_layout

\begin_layout Abstract
Shifting from a viewpoint of 
\begin_inset Quotes eld
\end_inset

variables and values
\begin_inset Quotes erd
\end_inset

 to a viewpoint of 
\begin_inset Quotes eld
\end_inset

connectors that connect
\begin_inset Quotes erd
\end_inset

 unites the theories of search (query and query languages) with the theories
 of parsing (deducing structure from input lacking structure).
 This provides a new and yet very natural theory of learning.
 Most notably, it solves the chicken-and-egg problem of 
\begin_inset Quotes eld
\end_inset

how do you search for somethig when you don't know what you are searching
 for?
\begin_inset Quotes erd
\end_inset

.
 It then recasts learning as a process that begins with a search for unknown
 things, then categorizing the new discoveries based on relationships.
\end_layout

\begin_layout Section*
Introduction
\end_layout

\begin_layout Standard
The concepts of querying, parsing and learning are normally considered to
 be quite distinct.
 This text unifies these concepts by replacing the concept of 
\begin_inset Quotes eld
\end_inset

plugging in a value into a variable
\begin_inset Quotes erd
\end_inset

 by the concept of 
\begin_inset Quotes eld
\end_inset

connecting two things together
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
The 
\begin_inset Quotes eld
\end_inset

query
\begin_inset Quotes erd
\end_inset

 here refers to the conventional idea of database queries; the query of
 SQL or GraphQL.
 Such queries are generally formulated as a generalized 
\begin_inset Quotes eld
\end_inset

pattern matching
\begin_inset Quotes erd
\end_inset

: one specifies a fixed part of a pattern, and a variable part, to be filled
 out.
 A textbook example of an SQL query might be 
\begin_inset Quotes eld
\end_inset

find all employees in sales
\begin_inset Quotes erd
\end_inset

, which is understood to be the directive to look at the 
\begin_inset Quotes eld
\end_inset

employees
\begin_inset Quotes erd
\end_inset

 table, and which contains two columns: the name of the employee, and the
 department they work in.
 The fixed part of the query is that the department must be 
\begin_inset Quotes eld
\end_inset

sales
\begin_inset Quotes erd
\end_inset

; the variable is the 
\begin_inset Quotes eld
\end_inset

employees
\begin_inset Quotes erd
\end_inset

.
 The actual syntax for such search, in SQL is 
\begin_inset Quotes eld
\end_inset


\family typewriter
\shape slanted
\emph on
SELECT name FROM employees WHERE department='sales';
\family default
\shape default
\emph default

\begin_inset Quotes erd
\end_inset

.
 Graph query languages, and the subgraph isomorphism problem are similar
 in nature: one specifies a collection of vertexes and edges (which may
 be labelled or unlaballed, directed or undirected), taken to be 
\begin_inset Quotes eld
\end_inset

fixed
\begin_inset Quotes erd
\end_inset

, and another region, variable, and then asks for all matching graphs that
 contain the fixed part.
 The variables are always named (unless there is only one, and then it can
 be anonymous): variables are X,Y,Z, ...
 and are generally typed (in SQL, the employee name is a string, the salary
 is a number.)
\end_layout

\begin_layout Standard
Consider then, the following query/pattern match.
 The database contains "
\emph on
Mike threw a ball.
 Joe threw a ball.
 Ben ate a pizza.
 The engine threw a crankshaft.
\emph default
", however that may be represented; for brevity, we skip the precise representat
ion.
 Consider the query pattern 
\begin_inset Quotes eld
\end_inset


\emph on
____ threw a ball.
\emph default

\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset


\emph on
X threw a ball.
\emph default

\begin_inset Quotes erd
\end_inset

 which 
\emph on
X
\emph default
 a named variable.
 This is a basic fill-in-the-blanks search.
 The variable 
\emph on
X
\emph default
 may be typed: "
\emph on
X must be a noun
\emph default
" or perhaps "
\emph on
X must be a given name
\emph default
".
 Typing helps narrow the search, and make if more precise.
 In practical applications, typing often provides a huge performance boost,
 and avoids paradoxes and ambiguity.
 Anyway: this search is straight-forward, and yeilds the expected results.
\end_layout

\begin_layout Standard
Consider now, the case of structured data.
 
\end_layout

\end_body
\end_document
